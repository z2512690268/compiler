	.data
	.global var
var:
	.word 0
	.text
	.global func
func:
	addi sp, sp, -32
func_t_entry:
#   %0 = load @var
	la t0, var
	lw t0, 0(t0)
	sw t0, 24(sp)
#   %2 = alloc i32
	addi t0, sp, 0
	sw t0, 16(sp)
#   store @x, %2
	lw t0, 16(sp)
	sw a0, 0(t0)
#   %3 = load %2
	lw t0, 16(sp)
	lw t0, 0(t0)
	sw t0, 12(sp)
#   %4 = add %0, %3
	lw t1, 24(sp)
	lw t2, 12(sp)
	add t0, t1, t2
	sw t0, 8(sp)
#   store %4, @var
	lw t0, 8(sp)
	la t1, var
	sw t0, 0(t1)
#   %5 = load @var
	la t0, var
	lw t0, 0(t0)
	sw t0, 4(sp)
#   ret %5
	lw t0, 4(sp)
	addi a0, t0, 0
	addi sp, sp, 32
	ret
	.global main
main:
	addi sp, sp, -48
	sw ra, 44(sp)
main_t_entry:
#   %0 = call @func(1)
	li a0, 1
	jal ra, func
	mv t0, a0
	sw t0, 28(sp)
#   %1 = call @putint(%0)
	lw a0, 28(sp)
	jal ra, putint
	mv t0, a0
	sw t0, 24(sp)
#   %2 = load @var
	la t0, var
	lw t0, 0(t0)
	sw t0, 20(sp)
#   %3 = mul %2, 10
	lw t1, 20(sp)
	li t2, 10
	mul t0, t1, t2
	sw t0, 16(sp)
#   store %3, @var
	lw t0, 16(sp)
	la t1, var
	sw t0, 0(t1)
#   %4 = call @func(2)
	li a0, 2
	jal ra, func
	mv t0, a0
	sw t0, 12(sp)
#   %5 = call @putint(%4)
	lw a0, 12(sp)
	jal ra, putint
	mv t0, a0
	sw t0, 8(sp)
#   %6 = call @putch(10)
	li a0, 10
	jal ra, putch
	mv t0, a0
	sw t0, 4(sp)
#   %7 = load @var
	la t0, var
	lw t0, 0(t0)
	sw t0, 0(sp)
#   ret %7
	lw t0, 0(sp)
	addi a0, t0, 0
	lw ra, 44(sp)
	addi sp, sp, 48
	ret

